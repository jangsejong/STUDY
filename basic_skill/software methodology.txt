소프트웨어 개발 방법론은 소프트웨어를 생산하는 데에 필요한 프로그래밍 개발 과정들을 정리하고 표준화하여 프로그래머들이 프로그래밍 개발과정에서 
각개인이 개발과정에서의 일관성을 유지하고 프로그래머들간의 효과적인 협업이 이루어질수 있도록 돕기 위한 방법론이다.

#역사
-1970년대
1969년까지 구조적 프로그래밍이 주로 쓰였다.

-1980년대
구조적 시스템 분석과 설계 방법론이 쓰였다.

-1990년대
객체 지향 프로그래밍이 1960년대부터 개발되어, 1990년대 중반에 주류 개발 방법론이 된다.
고속 개발 방법론이 1991년부터 쓰인다.
스크럼이 1990년 후반부터 쓰인다.
SEI의 와츠 험프리가 팀 소프트웨어 프로세스를 개발한다.

-2000년대
익스트림 프로그래밍이 1999년부터 쓰인다.
래셔널 통합 프로세스 (RUP)가 1998년부터 쓰인다.
스콧 앰블러가 2005년에 애자일 통합 프로세스 (AUP)를 시작한다.

#소프트웨어 개발 접근법
소프트웨어 개발 접근법에는 전통적으로 폭포수 모델, 프로토타이핑, 진화적 모델, 나선형 모델, 고속 개발 도구 등이 쓰여왔다.

#소프트웨어 개발 방법론
소프트웨어 개발(영어: software development)은 애플리케이션, 프레임워크, 기타 소프트웨어 구성 요소의 개발과 유지보수에 수반되는 
구상, 디자인, 프로그래밍, 문서화, 테스트, 버그 수정의 과정이다. 소프트웨어 개발은 소스 코드의 작성과 유지보수를 수반하지만 
더 넓은 의미에서 보면 일반적으로 계획되고 구조화된 과정 속에서 소프트웨어의 마지막 표명을 통해 원하는 소프트웨어의 개념으로부터 발생하는 모든 과정을 포괄한다.
또, 소프트웨어 개발은 소프트웨어 제품이 탄생하는데 수반되는 연구, 신개발, 프로토타입, 수정, 재사용, 리엔지니어링, 유지보수 등의 기타 활동도 포함한다.

link : https://ko.wikipedia.org/wiki/%EC%86%8C%ED%94%84%ED%8A%B8%EC%9B%A8%EC%96%B4_%EA%B0%9C%EB%B0%9C

# 위키백과 참조
